# This is a basic chaparral configuration.

# The address:port the server will listen on

# listen: ":8080"

# Storage Backend 
#
# The backend can be set here or using the CHAPARRAL_BACKEND environment
# variable. If it's set in both places, the environment variable value
# is used.
#
# Default value (current working directory):
# backend: file://.
#
# S3 example:
# backend: s3://ocfl?region=us-west-2


# Upload path
#
# Set 'uploads' to a directory path (relative to the backend) where uploads will
# be stored. Note that storage root paths must not include or be included in
# this directory. The default value ("") disables uploads.
uploads: "uploads"

# Sorage Root config
#
# Multiple OCFL storage roots can be configured. If the storage root
# doesn't exist, it will be created using values in `init`.
roots:
- id: "public" # id used in requests to refer to the storage root
  path: "public" # path relative to backend (CHAPARRAL_BACKEN)
  init:
    description: "public"
    layout: "0003-hash-and-id-n-tuple-storage-layout"

- id: restricted
  path: restricted

- id: "working"
  path: "working" # path relative to backend (CHAPARRAL_BACKEND)
  init:
    # if the storage doesn't exist it will be created with 
    # these options
    description: "default storage root"
    layout: "0003-hash-and-id-n-tuple-storage-layout"


# Permissions config
#
# The permissions block defines roles in terms of actions users assigned to
# the role can perform for a set of resources (i.e., OCFL objects). You may
# use whatever naming convention you like for the role names, however actions
# and resources should follow a set form. Allowed actions are `read_object`,
# `commit_object`, `delete_object`, and `*`. The latter matches any action.
# Resources should  have the form `root-id::object-id`, where root-id is an
# id set in the Storage Root Config and object-id is the OCFL object id. For
# example, `public::*` matches any object in the `public` storage root; `*::*`
# matches all objects in all storage roots.
#
# The "default" permission is used to set base permissions for all users,
# including un-authenticated requests.
permissions:
  default:
    read_object: ["public::*"]
  roles:
    # members can read any object in the 'restricted' storage root
    chaparral_member:
      read_object: ["restricted::*"]

    # admins can do any action to any resource
    chaparral_admin: 
      "*": ["*::*"]
