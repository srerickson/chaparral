// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: chaparral/v1/management_service.proto

package chaparralv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ScanStorageRootRequest is used to scan an OCFL storage root for objects.
type ScanStorageRootRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageRootId string `protobuf:"bytes,1,opt,name=storage_root_id,json=storageRootId,proto3" json:"storage_root_id,omitempty"`
}

func (x *ScanStorageRootRequest) Reset() {
	*x = ScanStorageRootRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaparral_v1_management_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanStorageRootRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanStorageRootRequest) ProtoMessage() {}

func (x *ScanStorageRootRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaparral_v1_management_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanStorageRootRequest.ProtoReflect.Descriptor instead.
func (*ScanStorageRootRequest) Descriptor() ([]byte, []int) {
	return file_chaparral_v1_management_service_proto_rawDescGZIP(), []int{0}
}

func (x *ScanStorageRootRequest) GetStorageRootId() string {
	if x != nil {
		return x.StorageRootId
	}
	return ""
}

// ScanStorageRootResponse is used to return OCFL object information during a
// scan of an OCFL storage root.i
type ScanStorageRootResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id for an OCFL object found in the storage root.
	ObjectId string `protobuf:"bytes,2,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *ScanStorageRootResponse) Reset() {
	*x = ScanStorageRootResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaparral_v1_management_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanStorageRootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanStorageRootResponse) ProtoMessage() {}

func (x *ScanStorageRootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaparral_v1_management_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanStorageRootResponse.ProtoReflect.Descriptor instead.
func (*ScanStorageRootResponse) Descriptor() ([]byte, []int) {
	return file_chaparral_v1_management_service_proto_rawDescGZIP(), []int{1}
}

func (x *ScanStorageRootResponse) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

var File_chaparral_v1_management_service_proto protoreflect.FileDescriptor

var file_chaparral_v1_management_service_proto_rawDesc = []byte{
	0x0a, 0x25, 0x63, 0x68, 0x61, 0x70, 0x61, 0x72, 0x72, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x63, 0x68, 0x61, 0x70, 0x61, 0x72, 0x72,
	0x61, 0x6c, 0x2e, 0x76, 0x31, 0x22, 0x40, 0x0a, 0x16, 0x53, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x52, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x17, 0x53, 0x63, 0x61, 0x6e, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x32,
	0x77, 0x0a, 0x11, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x0f, 0x53, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x70, 0x61, 0x72,
	0x72, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x63, 0x68, 0x61, 0x70, 0x61, 0x72, 0x72, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x61,
	0x6e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0xb9, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x68, 0x61, 0x70, 0x61, 0x72, 0x72, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x42, 0x16, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x72, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x73, 0x6f, 0x6e, 0x2f, 0x63,
	0x68, 0x61, 0x70, 0x61, 0x72, 0x72, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x68, 0x61,
	0x70, 0x61, 0x72, 0x72, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x68, 0x61, 0x70, 0x61, 0x72,
	0x72, 0x61, 0x6c, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x0c, 0x43, 0x68,
	0x61, 0x70, 0x61, 0x72, 0x72, 0x61, 0x6c, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0c, 0x43, 0x68, 0x61,
	0x70, 0x61, 0x72, 0x72, 0x61, 0x6c, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x18, 0x43, 0x68, 0x61, 0x70,
	0x61, 0x72, 0x72, 0x61, 0x6c, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0d, 0x43, 0x68, 0x61, 0x70, 0x61, 0x72, 0x72, 0x61, 0x6c,
	0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chaparral_v1_management_service_proto_rawDescOnce sync.Once
	file_chaparral_v1_management_service_proto_rawDescData = file_chaparral_v1_management_service_proto_rawDesc
)

func file_chaparral_v1_management_service_proto_rawDescGZIP() []byte {
	file_chaparral_v1_management_service_proto_rawDescOnce.Do(func() {
		file_chaparral_v1_management_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_chaparral_v1_management_service_proto_rawDescData)
	})
	return file_chaparral_v1_management_service_proto_rawDescData
}

var file_chaparral_v1_management_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_chaparral_v1_management_service_proto_goTypes = []interface{}{
	(*ScanStorageRootRequest)(nil),  // 0: chaparral.v1.ScanStorageRootRequest
	(*ScanStorageRootResponse)(nil), // 1: chaparral.v1.ScanStorageRootResponse
}
var file_chaparral_v1_management_service_proto_depIdxs = []int32{
	0, // 0: chaparral.v1.ManagementService.ScanStorageRoot:input_type -> chaparral.v1.ScanStorageRootRequest
	1, // 1: chaparral.v1.ManagementService.ScanStorageRoot:output_type -> chaparral.v1.ScanStorageRootResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_chaparral_v1_management_service_proto_init() }
func file_chaparral_v1_management_service_proto_init() {
	if File_chaparral_v1_management_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chaparral_v1_management_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanStorageRootRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaparral_v1_management_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanStorageRootResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chaparral_v1_management_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chaparral_v1_management_service_proto_goTypes,
		DependencyIndexes: file_chaparral_v1_management_service_proto_depIdxs,
		MessageInfos:      file_chaparral_v1_management_service_proto_msgTypes,
	}.Build()
	File_chaparral_v1_management_service_proto = out.File
	file_chaparral_v1_management_service_proto_rawDesc = nil
	file_chaparral_v1_management_service_proto_goTypes = nil
	file_chaparral_v1_management_service_proto_depIdxs = nil
}
